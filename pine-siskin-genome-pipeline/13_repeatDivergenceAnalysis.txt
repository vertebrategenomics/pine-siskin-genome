##################################################################################################################################
Step 13a: Soft-masking repeats (repeatmasker v4.1.8)
##################################################################################################################################

RepeatMasker -pa 4 -dir repeatMaskerOutputPISI -gff -lib pisiRepeats-families.fa -xsmall pisiScaffoldsHap1.trimmed_scafs.fa
RepeatMasker -pa 4 -dir repeatMaskerOutputPISI -gff -lib TEtrimmer_consensus_merged.fasta -xsmall pisiScaffoldsHap1.trimmed_scafs.fa
RepeatMasker -pa 6 -a -gff -dir repeatMaskerOutputPISI -lib curated_sequences_NR_formatted.fa pisiScaffoldsHap1.trimmed_scafs.fa

cut -f1,4,5 pisiScaffoldsHap1.trimmed_scafs.MCH.fa.out.gff > MCH.bed
cut -f1,4,5 pisiScaffoldsHap1.trimmed_scafs.TEt.fa.out.gff > TEt.bed

sort -k1,1 -k2,2n MCH.bed > MCH.sorted.bed
sort -k1,1 -k2,2n TEt.bed > TEt.sorted.bed

bedtools intersect -a MCH.sorted.bed -b TEt.sorted.bed > shared.bed
bedtools jaccard -a MCH.sorted.bed -b TEt.sorted.bed

terminal output: 13a_repeatMaskerRepeatModeler.txt
terminal output: 13b_repeatMaskerTerminalTEtrimmer.txt
terminal output: 13c_repeatMaskerMCHelper.txt
terminal output: 13d_comparisonCuratedLibraries.txt

##################################################################################################################################
Step 13b: Dating complete repeat families (repeatmasker v4.1.8)
##################################################################################################################################
export PERL5LIB=/home/triciavanlaar/miniforge3/envs/genomics_lr/share/RepeatMasker
perl /home/triciavanlaar/miniforge3/envs/genomics_lr/bin/calcDivergenceFromAlign.pl -s pisiScaffoldsHap1k2kIncomplete.divsum repeatMaskerOutputPISI/pisiScaffoldsHap1.trimmed_scafs.fa.align


grep -v "_inc\|_unconfirmed" pisiScaffoldsHap1.trimmed_scafs.fa.align > pisiScaffoldsHap1.complete.align
perl /home/triciavanlaar/miniforge3/envs/genomics_lr/bin/calcDivergenceFromAlign.pl -s pisiScaffoldsHap1k2k.complete.divsum repeatMaskerOutputPISI/pisiScaffoldsHap1.complete.align


setwd("/home/triciavanlaar/kimuraTest")

```{r}
install.packages("tidyverse") 
install.packages("reshape2")
install.packages("viridis")

library(tidyverse)
library(reshape2)
library(viridis)

genome_size <- 1253070245

landscape <- read.table("kimuraLandcape.tbl", header = TRUE, sep = "", check.names = FALSE)

landscape_long <- melt(landscape, id.vars = "Div", variable.name = "Class", value.name = "Bases")

landscape_long$BroadClass <- case_when(
  grepl("LINE", landscape_long$Class, ignore.case = TRUE) ~ "LINE",
  grepl("LTR",  landscape_long$Class, ignore.case = TRUE) ~ "LTR",
  grepl("SINE", landscape_long$Class, ignore.case = TRUE) ~ "SINE",
  grepl("MAVERICK|TIR", landscape_long$Class, ignore.case = TRUE) ~ "DNA",
  grepl("Simple", landscape_long$Class, ignore.case = TRUE) ~ "Simple",
  grepl("Unknown", landscape_long$Class, ignore.case = TRUE) ~ "Unknown",
  TRUE ~ "Other"
)

landscape_summary <- landscape_long %>%
  group_by(Div, BroadClass) %>%
  summarise(Bases = sum(Bases), .groups = "drop") %>%
  mutate(PercentGenome = Bases / genome_size * 100)

ggplot(landscape_summary, aes(x = Div, y = PercentGenome, fill = BroadClass)) +
  geom_bar(stat = "identity", position = "stack", color = "black", size = 0.2) +
  scale_fill_viridis(discrete = TRUE, option = "D") +
  labs(
    title = "Repeat Landscape",
    x = "Kimura Substitution Level (%)",
    y = "Percent of Genome Masked",
    fill = "Repeat Class"
  ) +
  coord_cartesian(xlim = c(0, 50)) +
  theme_classic() +
  theme(
    axis.text = element_text(size = 11),
    axis.title = element_text(size = 13),
    legend.title = element_text(size = 12),
    legend.text = element_text(size = 10)
  )
  
ggsave("repeatLandscape.png", width = 10, height = 5, dpi = 300)

```

```{r}
unfiltered <- read.table("kimuraUnfiltered.tbl", header = TRUE, sep = "", check.names = FALSE)

unfiltered_long <- melt(unfiltered, id.vars = "Div", variable.name = "Class", value.name = "Bases") %>%
  mutate(BroadClass = case_when(
    grepl("LINE", Class, ignore.case = TRUE) ~ "LINE",
    grepl("LTR",  Class, ignore.case = TRUE) ~ "LTR",
    grepl("SINE", Class, ignore.case = TRUE) ~ "SINE",
    grepl("MAVERICK|TIR|HAT|MERLIN|DNA", Class, ignore.case = TRUE) ~ "DNA",
    grepl("Simple", Class, ignore.case = TRUE) ~ "Simple",
    grepl("Unknown", Class, ignore.case = TRUE) ~ "Unknown",
    TRUE ~ "Other"
  ))

unfiltered_summary <- unfiltered_long %>%
  group_by(Div, BroadClass) %>%
  summarise(Bases = sum(Bases), .groups = "drop") %>%
  mutate(PercentGenome = Bases / genome_size * 100)

ggplot(unfiltered_summary, aes(x = Div, y = PercentGenome, fill = BroadClass)) +
  geom_bar(stat = "identity", position = "stack", color = "black", size = 0.2) +
  scale_fill_viridis(discrete = TRUE, option = "D") +
  labs(
    title = "Repeat Landscape (Unfiltered)",
    x = "Kimura Substitution Level (%)",
    y = "Percent of Genome Masked",
    fill = "Repeat Class"
  ) +
  coord_cartesian(xlim = c(0, 50)) +
  theme_classic() +
  theme(
    axis.text = element_text(size = 11),
    axis.title = element_text(size = 13),
    legend.title = element_text(size = 12),
    legend.text = element_text(size = 10)
  )
```

```{r}
library(ggplot2)
library(dplyr)
library(tidyr)
library(forcats)

repeat_data <- data.frame(
  Method = rep(c("RepeatModeler2", "MCHelper", "TEtrimmer"), each = 6),
  Class = rep(c("LTR", "LINE", "SINE", "DNA", "Other", "Unknown"), times = 3),
  Percent = c(
    5.23, 3.75, 0.01, 0.05, 2.92, 11.34,   
    14.39, 3.78, 0.01, 0.05, 2.64, 2.04,    
    9.80, 6.09, 0.98, 0.11, 6.79, 0.36      
  )
) %>%
  mutate(
    Method = fct_rev(fct_relevel(Method, "RepeatModeler2", "TEtrimmer", "MCHelper")),
    Class = factor(Class, levels = c("LTR", "LINE", "SINE", "DNA", "Other", "Unknown"))
  )

ggplot(repeat_data, aes(x = Method, y = Percent, fill = Class)) +
  geom_bar(stat = "identity") +
  coord_flip() +
  scale_fill_brewer(palette = "Set2") +
  labs(
    title = NULL,
    x = NULL,
    y = "Percent of Genome Masked",
    fill = "Repeat Class"
  ) +
  theme_minimal() +
  theme(
    text = element_text(size = 14),
    axis.title = element_text(size = 14, face = "bold"),
    axis.text = element_text(size = 12, face = "bold"),
    legend.title = element_text(size = 12, face = "bold"),
    legend.text = element_text(size = 11, face = "bold"),
    panel.grid = element_blank(),
    axis.line = element_line(color = "black"),
    axis.ticks = element_line(color = "black")
  )

ggsave("repeatCompositionHorizontal.png", width = 12, height = 4, dpi = 300)
```
